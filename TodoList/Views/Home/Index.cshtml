@model TodoListDB.Model.SelectLists
@{
    ViewBag.Title = "Home Page";
}
@using (Html.BeginForm())
{
    <div class="jumbotron">
        <h1>E-Planner</h1>
    </div>

 
   
    <div class="row">
        <div class="form-group">
            <div id="gridalerts"></div>
            <div id="gridEmpl"></div>
        </div>
    </div>
    <div class="form-group">
        @Html.DropDownList("todoListId", Model.TodoListList, new { @class = "form-control", @id = "todoListDropdown" })
    </div>

    <table id="todoItemsTable" class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Status</th>
                <th>Due Date</th>
                <th>User Delegated To ID</th>
                <!-- Add other columns as needed -->
            </tr>
        </thead>
        <tbody>
            <!-- Todo items will be added here by jQuery -->
        </tbody>
    </table>
}
@section scripts
{
    <script type="text/javascript">

        var NewEmployee = {
            fName: '#fName',
            lName: '#lName',
            email: '#email',
            occupation: '#occupation',
            department:"",
            Id: '#AddModal',
            Show: function () {
                $(this.Id).modal('show');
            },
            Hide: function () {
                $(this.Id).modal('hide');
            },
            ClearForm: function () {
                $(this.fName).val('');
                $(this.lName).val('');
                $(this.email).val('');
                $(this.occupation).val('');
                $(this.department).val('');
            },
            IsValid: function () {
                var undentifiedList = null;
                var UlItems = null;
                var IsValid = true;
                var Valid = new Validation('message');

                if ($(this.fName).val() == '') {
                    IsValid = false;
                }

                if ($(this.lName).val() == '') {
                    IsValid = false;
                    UlItems += '<li>Last name is required</li>';
                }
                if ($(this.email).val()  == '') {
                    IsValid = false;
                    UlItems += '<li>email is required</li>';
                }
                undentifiedList = '<ul>' + UlItems + '</ul>'

                if (!IsValid) {
                    Validation.ShowErrorMessage(undentifiedList);
                    return false;
                }

                return true;
            }

        }
        $(document).on('click', '.plus-icon', function () {
            $('#AddtModal').modal('show')
            $('#AddtModal').data('emplid', $(this).data('emplid'));

        })
        //insert-confirm
        $('.confirm-insert').click(function () {

            var Validate = new Validation('emplid');
            if (NewEmployee.IsValid()) {
                Grid.Add({
                    fName: $(NewEmployee.fName).val(),
                    lName: $(NewEmployee.lName).val(),
                    email: $(NewEmployee.email).val(),
                    occupation: $(NewEmployee.occupation).val(),
                    department: $(NewEmployee.department).val()
                },
                    function (data) {
                        if (data.IsValid) {
                            Validate.ShowSuccessMessage('Employee was added successfully')
                            Grid.RefreshGrid();
                        }
                        else {
                            Validate.ShowErrorMessage(data.Message);
                        }
                    },
                    function (data) {
                        Validate.ShowErrorMessage('Unexpected error occured')
                    });
            }


        })
        //delete popup
        $(document).on('click', '.delete-icon', function () {
            var temp = $('#deleteModal').data('typeid', $(this).data('typeid'));
            $('#deleteModal').modal('show')
            $('#deleteModal').data('emplid', $(this).data('emplid'));
        });
        //delete confirm
        $('.confirm-delete').click(function () {
            var Validate = new Validaiton('formalert');

            var s = $('#deleteModal').data('emplid');
            Grid.Delete({ ID: s },
                function (data) {
                    if (data.IsValid) {
                        $('#deleteModal').modal('hide');
                        Validation.ShowSuccessMessage('Category was deleted successfully')
                        Grid.RefreshGrid();
                    }
                    else {
                        AlertObj.ShowErrorMessage(data.Message);
                    }

                },
                function (data) {
                    $('#deleteModal').modal('hide');
                    Validation.ShowErrorMessage('Unexpected error occured');

                });
        })

        $('#AddEmplBtn').click(function () {
            //$('#NewTechnicianModal').modal('show');
            NewTechType.ClearForm();
            NewTechType.Show()
        })

        
    </script>
    <script type="text/javascript">
 // Event listener for dropdown change
 $('#todoListDropdown').change(function() {
     var selectedListId = $(this).val();
     if (selectedListId) {
         $.getJSON('@Url.Action("GetTodoItems", "Home")', { todoListId: selectedListId }, function(data) {
             var rows = '';
             $.each(data, function(i, item) {
                 rows += '<tr>'+
                         '<td>'+ item.title +'</td>'+
                         '<td>'+ item.complete_incomplete +'</td>'+
                     '<td>' + item.dueDate + '</td>' +
                     '<td>' + item.userDelegatedToId + '</td>'
                         '</tr>';
             });
             $('#todoItemsTable tbody').html(rows);
         });
     } else {
         $('#todoItemsTable tbody').empty();
     }
 });
    </script>
}
